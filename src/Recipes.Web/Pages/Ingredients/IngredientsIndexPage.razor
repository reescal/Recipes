@page "/Ingredients"
@page "/Ingredients/{Id:guid}"
@using Recipes.Web.Services
@inject IIngredientsService _ingredientsService

@if (ingredients != null)
{
    <FilterableCardGrid Entities="@entities" TItem="ComplexEntity" CreateAction="() => ingredientsModal?.Show()" Route="Ingredients" />
    <CascadingValue Value="@Id">
        <IngredientsModal SelectedIngredient="@SelectedIngredient" Refresh="Refresh" @ref="ingredientsModal" Route="Ingredients" />
    </CascadingValue>
}

@code {
    private IEnumerable<Ingredient> ingredients { get; set; } = new List<Ingredient>();

    private IEnumerable<ComplexEntity> entities => ingredients.Select(x => (ComplexEntity)x);

    private Ingredient? SelectedIngredient = default;

    private IngredientsModal? ingredientsModal;

    [Parameter]
    public Guid? Id { get; set; }

    protected override async Task OnInitializedAsync() => ingredients = await _ingredientsService.Get();

    protected override void OnParametersSet()
    {
        if (Id == null)
            return;

        SelectedIngredient = ingredients.FirstOrDefault(x => x.Id == Id);
        ingredientsModal?.Show();
    }

    private async Task Refresh() => ingredients = await _ingredientsService.Get();
}
